package de.rub.nds.tlsbreaker.breakercommons.attacker;

public enum VulnerabilityType {
    @Deprecated
    TRUE(30),
    VULNERABLE(30),
    VULNERABLE_NOT_EXPLOITABLE(25),
    PROBABLY_VULNERABLE(20),
    VULNERABILITY_POSSIBLE(10),
    PROBABLY_NOT_VULNERABLE(0),
    UNKNOWN(0),
    NOT_VULNERABLE(0),
    @Deprecated
    FALSE(0),
    TEST_FAILURE(-10),
    @Deprecated
    NULL(-10);

    public final int value;

    private VulnerabilityType(int value) {
        this.value = value;
    }

    public boolean isGreaterEqualTo(VulnerabilityType other) {
        return value >= other.value;
    }

    public boolean isGreaterThan(VulnerabilityType other) {
        return value > other.value;
    }

    public boolean isLessEqualTo(VulnerabilityType other) {
        return value <= other.value;
    }

    public boolean isLessThan(VulnerabilityType other) {
        return value < other.value;
    }

    @Deprecated
    public boolean asBool() {
        return isGreaterThan(NOT_VULNERABLE);
    }

    @Deprecated
    public static VulnerabilityType fromBoolean(Boolean bool) {
        if (bool == null) {
            return NULL;
        } else if (bool.equals(Boolean.TRUE)) {
            return TRUE;
        } else {
            return FALSE;
        }
    }
}
